# 面向对象   属性 方法
# 将函数进行分类和封装，使开发更高效
# 函数： 具有某种功能可重复使用的代码块
# 字符串的函数、列表的函数、字典的函数
# 1.  定义一个 类   class 类名:  def 函数1  def 函数2
# 2.  调用    对象   asd() 类名()赋值给对象
#  类的实例（实际的例子）方便在类的外部调用函数
#  类的实例（实际的例子）方便在类的内部调用函数
#  self=小艾
# 3.   继承  
#  一个新的类可以继承旧的类中的所有函数
#  嵌套继承  
#  多继承   一个新的类可以同时继承多个旧类   
# 4.   多态，方法重写
# 5.   私有方法(属性)
#   不能被继承的方法，只能在自己的类的内部使用
# 6.   类的专有方法
#   运行不需要手动调用

# 属性：可以作用于任何一个函数的参数

# class asd:
# 	def 播放歌曲(self):
# 		print('将字符串小写变大写')

# 	def 对话(self):
# 		print('将字符串分割为列表')

# 	def __聊天(self):
# 		print(110)

class new_asd():
	def __init__(self,x=110): # 初始化属性
		self.name = x
	def 对话(self):
		print('hello {}'.format(self.name))
	def 聊天(self):
		print('{}今年19岁'.format(self.name))
a = new_asd('asd')
b = new_asd('110')